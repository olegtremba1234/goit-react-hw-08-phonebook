{"version":3,"file":"static/js/251.d09f16d9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","hooks/filterHook.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsAPI';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [addContact] = useAddContactMutation();\n    const { data: contacts } = useGetContactsQuery();\n\n    const onAddContact = contact => {\n        if (contacts && contacts.some(item => item.name === contact.name)) {\n            alert(`${contact.name} is alredy in contacts`);\n            return\n        }\n        addContact(contact);\n    }\n\n    const onChangeInput = event => {\n        const {name,value} = event.target;\n        if(name === 'name') {\n            setName(value)\n        }\n        if (name === 'number') {\n            setNumber(value)\n        }\n    }\n\n    const onSubmitForm = event => {\n        event.preventDefault();\n    \n        if (name && number) {\n          onAddContact({\n            name,\n            number,\n          });\n        } else {\n          alert('The number field and name are empty, fill them in!');\n        }\n    \n        reset(event);\n      };\n\n      const reset = event => {\n        setName('');\n        setNumber('');\n        event.currentTarget.reset();\n      };\n\n      return (\n        <Box textAlign=\"center\">\n          <Typography\n            style={{\n              fontSize: '40px',\n              fontWeight: 'bold',\n              lineHeight: '2.8',\n              marginBottom: '20px',\n            }}\n            variant=\"h3\"\n          >\n            Phonebook\n          </Typography>\n          <Box\n            component=\"form\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            sx={{\n              '& > :not(style)': { m: 1 },\n            }}\n            autoComplete=\"off\"\n            onSubmit={onSubmitForm}\n          >\n            <TextField\n              sx={{ width: '50ch' }}\n              type=\"text\"\n              name=\"name\"\n              onChange={onChangeInput}\n              id=\"filled-basic\"\n              label=\"Name\"\n              variant=\"filled\"\n              required\n            />\n            <TextField\n              sx={{ width: '50ch' }}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              id=\"filled-basic\"\n              label=\"Number\"\n              variant=\"filled\"\n              onChange={onChangeInput}\n              required\n            />\n            <Button disabled={!name || !number} type=\"submit\">\n              Add Contact\n            </Button>\n          </Box>\n        </Box>\n      );\n}\n\nexport default ContactForm;","import { useDispatch, useSelector } from 'react-redux';\nimport { filterAction } from '../redux/filterSlice';\nimport { onFilterChange } from '../redux/filterSlice';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(onFilterChange);\n  const onChangeFilter = event => dispatch(filterAction.changeFilter(event));\n\n  return { filter, changeFilter: onChangeFilter };\n};","import { Box, TextField, Typography } from '@mui/material';\nimport { useFilter } from '../../hooks/filterHook';\n\nexport const Filter = () => {\n  const { filter, changeFilter } = useFilter();\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <Typography\n        style={{\n          fontSize: '35px',\n          fontWeight: 'bold',\n          lineHeight: '2.8',\n          marginBottom: '10px',\n        }}\n        variant=\"h3\"\n      >\n        Contacts\n      </Typography>\n      <TextField\n        sx={{ width: '50ch' }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => changeFilter(event.target.value)}\n        id=\"filled-basic\"\n        label=\"Find contacts by name\"\n        variant=\"filled\"\n        required\n      />\n    </Box>\n  );\n};","import PropTypes from 'prop-types';\nimport { ListItemText, ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useDeleteContactMutation } from 'redux/contactsAPI';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <ListItem>\n      <ListItemText primary={`${name}: ${number}`} />\n      <IconButton\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n        edge=\"end\"\n        aria-label=\"delete\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import { Grid, List, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useFilter } from 'hooks/filterHook';\nimport { useGetContactsQuery } from 'redux/contactsAPI';\nimport { useMemo } from 'react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark' ? '#1A2027' : 'rgba(0, 0, 0, 0.06)',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  minWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nexport const ContactList = () => {\n  const { filter } = useFilter();\n  const { data: contacts } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      ) ?? []\n    );\n  }, [filter, contacts]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      sx={{ flexGrow: 1 }}\n    >\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid item xs={12} md={6}>\n          <List>\n            {filteredContacts &&\n              filteredContacts.map(({ name, number, id }) => (\n                <ContactItem key={id} name={name} number={number} id={id} />\n              ))}\n          </List>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n};","import { Box } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsView = () => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      backgroundColor=\"white\"\n      paddingBottom=\"250px\"\n    >\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\n\nexport default ContactsView;"],"names":["ContactForm","useState","name","setName","number","setNumber","useAddContactMutation","addContact","contacts","useGetContactsQuery","data","onChangeInput","event","target","value","reset","currentTarget","Box","textAlign","Typography","style","fontSize","fontWeight","lineHeight","marginBottom","variant","component","display","justifyContent","flexDirection","sx","m","autoComplete","onSubmit","contact","preventDefault","some","item","alert","TextField","width","type","onChange","id","label","required","Button","disabled","useFilter","dispatch","useDispatch","filter","useSelector","onFilterChange","changeFilter","filterAction","Filter","alignItems","ContactItem","useDeleteContactMutation","deleteContact","isLoading","ListItem","ListItemText","primary","IconButton","onClick","edge","Delete","StyledPaper","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","minWidth","color","text","ContactList","filteredContacts","useMemo","toLocaleLowerCase","includes","flexGrow","my","mx","p","Grid","xs","md","List","map","paddingBottom"],"sourceRoot":""}